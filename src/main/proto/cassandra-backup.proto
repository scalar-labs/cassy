syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option java_multiple_files = true;
option java_package = "com.scalar.backup.cassandra.rpc";
option java_outer_classname = "CassandraBackupProto";

package rpc;

service CassandraBackup {
    rpc ShowClusters (google.protobuf.Empty) returns (ClusterListingResponse) {
        option (google.api.http) = {
            get: "/v1/clusters"
        };
    }
    rpc ListNodes (NodeListingRequest) returns (NodeListingResponse) {
        option (google.api.http) = {
            get: "/v1/clusters/{cluster_id}"
        };
    }
    rpc ListBackups (BackupListingRequest) returns (BackupListingResponse) {
        option (google.api.http) = {
            get: "/v1/clusters/{cluster_id}/backups"
        };
    }
    rpc TakeBackup (BackupRequest) returns (BackupResponse) {
        option (google.api.http) = {
            post: "/v1/clusters/{cluster_id}/backups"
            body: "*"
        };
    }
    rpc RestoreBackup (RestoreRequest) returns (RestoreResponse) {
        option (google.api.http) = {
            put: "/v1/clusters/{cluster_id}/data/{snapshot_id}"
            body: "*"
        };
    }
}

message ClusterListingResponse {
    repeated string cluster_id = 1;
}

message NodeListingRequest {
    string cluster_id = 1;
}

message NodeListingResponse {
    message Entry {
        string ip = 1;
        enum NodeStatus {
            UNKNOWN = 0;
            LIVE = 1;
            LEAVING = 2;
            MOVING = 3;
            JOINING = 4;
            UNREACHABLE = 5;
        }
        NodeStatus status = 2;
    }
    repeated Entry entries = 1;
}

message BackupListingRequest {
    string cluster_id = 1;
    string target_ip = 2;
    uint32 n = 3;
}

message BackupListingResponse {
    message Entry {
        string cluster_id = 1;
        string target_ip = 2;
        string snapshot_id = 3;
        int64 incremental_id = 4;
        uint32 backup_type = 5;
        OperationStatus status = 6;
        uint64 timestamp = 7;
    }
    repeated Entry entries = 1;
}

enum OperationStatus {
    UNKNOWN = 0;
    INITIALIZED = 1;
    STARTED = 2;
    COMPLETED = 3;
    FAILED = 4;
}

message BackupRequest {
    string cluster_id = 1;
    string target_ip = 2; // optional
    string snapshot_id = 3; // optional
    uint32 backup_type = 4;
}

message BackupResponse {
    OperationStatus status = 1;
    string message = 2;
    string snapshot_id = 3;
    int64 incremental_id = 4;
}

message RestoreRequest {
    string cluster_id = 1;
    repeated string target_ips = 2; // optional
    string snapshot_id = 3;
    uint32 restore_type = 4;
    bool snapshot_only = 5; // optional (default: false)
}

message RestoreResponse {
    OperationStatus status = 1;
    string message = 2;
}
